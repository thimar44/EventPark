@model EventPark.Models.EvenementViewModel

@{
    ViewBag.Title = "Detail";
}

<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>
<div class="backToList">
    <a class="btn btn-link" href="@Url.Action("Index", "Evenement")">
        <i class="fa fa-chevron-left "> Retour à la liste</i>
    </a>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-12">
            <div class="jumbotron jumbotron-fluid rounded">
                <h4 class="event-title event-title-detail"> @Html.DisplayFor(model => model.Titre)</h4>
                <p>
                    tarif  :  @Html.DisplayFor(model => model.Tarif)€<br />
                    lieu : @Html.DisplayFor(model => model.Adresse.Rue), @Html.DisplayFor(model => model.Adresse.CodePostal) @Html.DisplayFor(model => model.Adresse.Ville)<br />
                    Début : @Html.DisplayFor(model => model.DateDebut) <br />
                    Fin : @Html.DisplayFor(model => model.DateFin)
                </p>
            </div>
        </div>
    </div>
    @if (Model.Images.Count > 0)
    {
        <div class="row">
            <div class="col-md-12">
                <div class="jumbotron jumbotron-fluid jumbotron-carousel">
                    <div id="MonCarousel" class="carousel slide" data-ride="carousel">
                        <ul class="carousel-indicators">
                            @{
                                int counter = 0;

                                foreach (var image in Model.Images)
                                {
                                    <li data-target="#MonCarousel" data-slide-to="@counter"></li>
                                    counter = counter + 1;
                                }
                            }
                        </ul>
                        <div class="carousel-inner">
                            @{
                                int counter2 = 0;
                                string active = " active";
                                foreach (var image in Model.Images)
                                {
                                    <div class="carousel-item @if (counter2 == 0)
                                { @active } ">
                                        <img class="" src="../../@image.Url">
                                    </div>
                                    counter2 = counter2 + 1;
                                }
                            }
                        </div>
                        <a class="carousel-control-prev" href="#MonCarousel" data-slide="prev">
                            <span class="carousel-control-prev-icon"></span>
                        </a>
                        <a class="carousel-control-next" href="#MonCarousel" data-slide="next">
                            <span class="carousel-control-next-icon"></span>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-md-12">
            <div class="jumbotron jumbotron-fluid rounded">
                <p> @Html.DisplayFor(model => model.Descrition)</p>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="jumbotron jumbotron-fluid rounded">

                <h2>Rechercher un parking à proximité :</h2>


                <form autocomplete="off">
                    <div class="autocomplete">
                        <input id="addressInput" type="text" name="addressInput" onkeyup="getGeoCode()" placeholder="Entrez votre adresse" style="width:400px;">

                        <div class="choiceDiv">
                            <ul class="choiceUl"></ul>
                        </div>
                    </div>
                </form>




            </div>
        </div>
        <div class="col-md-12">
            <div id="panel" style="display:  none;"></div>
            <div id="map" class="rounded"></div>
            <script>
                var gmarkers = [];
                var map;
                var eventCoordinate;
                var userCoordinate;
                var coordinateSelected;
                var latSelected;
                var lngSelected;
                var directionsService;
                var directionsDisplay;


                function getGeoCode() {
                    var userInput = $("input#addressInput").val();
                    $.getJSON({
                        url: 'https://maps.googleapis.com/maps/api/geocode/json',
                        data: {
                            key: "AIzaSyAXEJ9Kcn0hWuIFxXRK6E5QwjMjb9_n9Ew",
                            address: userInput
                        },
                        success: function (data, textStatus) {
                            $(".choiceUl").empty();
                            var idChoice = 0;
                            for (result in data.results) {
                                $(".choiceUl").append('<li id=choice'+ idChoice+' class="choiceLi" lng=' + data.results[result].geometry.location.lng + ' lat=' + data.results[result].geometry.location.lat + ' onClick="clickOnChoice(' + idChoice + ')">' + data.results[result].formatted_address + '</li>');
                                idChoice = idChoice + 1;
                            };

                        }
                    });
                };


                function loadParks() {
                    $.ajax({
                        type: 'POST',
                        url: "../../Map/LoadParking",
                        data: JSON.stringify({
                            latUser: latSelected,
                            lngUser: lngSelected,
                            latEvent: "@Html.DisplayFor(model => model.Adresse.CoordX)",
                            lngEvent: "@Html.DisplayFor(model => model.Adresse.CoordY)"
                        }),
                        contentType: 'application/json; charset=utf-8',
                        dataType: 'json',
                        success: function (msg) {

                            $.each(msg, function (key, value) {
                                console.log(value);
                                var coordinate = new google.maps.LatLng(value.adresse.CoordY, value.adresse.CoordX);
                                var parkingMarker = new google.maps.Marker({
                                    position: coordinate,
                                    icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                                    map: map
                                });

                                parkingMarker.addListener('click', function () {
                                    //var directionsService = new google.maps.DirectionsService();
                                    //var directionsDisplay = new google.maps.DirectionsRenderer();
                                    directionsDisplay.setMap(null);
                                    directionsDisplay.setPanel(null);

                                    directionsDisplay.setMap(map);
                                    directionsDisplay.setPanel(document.getElementById('panel'));

                                    var request = {
                                        origin: coordinateSelected,
                                        destination: coordinate,
                                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                                    };
                                    directionsDisplay.setDirections({ routes: [] });
                                    directionsService.route(request, function (response, status) {
                                        if (status == google.maps.DirectionsStatus.OK) {
                                            directionsDisplay.setDirections(response);
                                        }
                                    });
                                });

                            });
                        }
                    });
                }

                function clickOnChoice(idChoice) {
                    var elementSelected = $("#choice" + idChoice);
                    $("#addressInput").val(elementSelected.text());
                    latSelected = elementSelected.attr("lat");
                    lngSelected = elementSelected.attr("lng");
                    coordinateSelected = new google.maps.LatLng(latSelected, lngSelected);
                    $(".choiceUl").empty();


                    var userMarker = new google.maps.Marker({
                        position: coordinateSelected,
                        map: map
                    });

                    gmarkers.push(userMarker);

                    for (i = 0; i < gmarkers.length; i++) {
                        gmarkers[i].setMap(null);
                    }

                    directionsService = new google.maps.DirectionsService();
                    directionsDisplay = new google.maps.DirectionsRenderer();
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('panel'));

                    var request = {
                        origin: coordinateSelected,
                        destination: eventCoordinate,
                        travelMode: google.maps.DirectionsTravelMode.DRIVING
                    };

                    directionsService.route(request, function (response, status) {
                        if (status == google.maps.DirectionsStatus.OK) {
                            directionsDisplay.setDirections(response);
                        }
                    });

                    loadParks();

                }


                function initMap() {
                    eventCoordinate = new google.maps.LatLng("@Html.DisplayFor(model => model.Adresse.CoordX)".replace(',', '.'), "@Html.DisplayFor(model => model.Adresse.CoordY)".replace(',', '.'));
                    map = new google.maps.Map(document.getElementById('map'), {
                        zoom: 12,
                        center: eventCoordinate
                    });
                    var eventMarker = new google.maps.Marker({
                        position: eventCoordinate,
                        icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png',

                        map: map
                        //    icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png',
                    });
                    gmarkers.push(eventMarker);
                }
            </script>
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAXEJ9Kcn0hWuIFxXRK6E5QwjMjb9_n9Ew&callback=initMap">
            </script>
        </div>
    </div>


</div>
